# Plugins
#set -g @plugin 'tmux-plugins/tpm'

# remap prefix from ctrl-b to ctrl-a
unbind C-b
bind-key C-a send-prefix

set -g  base-index                      1
set -g  default-command                 "reattach-to-user-namespace -l zsh"
set -g  focus-events                    on
set -g  history-limit                   50000
setw -g mode-keys                       vi
set -g  mode-keys                       vi
set -g  mouse                           on
set -g  prefix                          C-a
set -g  set-clipboard                   on
set -g  status-interval                 1
set -g  status-keys                     vi
set -g  status-left                     "⎡#S⎤ "
set -g  status-position                 top
set -g  status-right                    "" # "%a %d-%m-%Y %H:%M:%S"
set -g  status-style                    bg="#000000",fg=green
set -s  escape-time                     0
set -g  window-status-current-style     bg=green,fg="#000000"
set -g  window-status-current-format     "#I:#W#{?window_zoomed_flag,*,}"

bind c new-window -c "#{pane_current_path}"
bind e last-window
bind x kill-pane

# 24-bit-colors
set -g default-terminal "alacritty"
set -ag terminal-overrides ",alacritty:RGB"

# reload config
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded tmux config"

# Panes
unbind %
bind | split-window -h -p 50 -c "#{pane_current_path}"
unbind '"'
bind - split-window -v -c "#{pane_current_path}"


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Smart vi copy mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Open window automatically if not open yet
bind-key 1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind-key 2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind-key 3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind-key 4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind-key 5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind-key 6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind-key 7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind-key 8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
bind-key 9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9'
bind-key 0 if-shell 'tmux select-window -t :0' '' 'new-window -t :0'
